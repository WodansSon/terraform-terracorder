Analyzing: C:\github.com\hashicorp\terraform-provider-azurerm\internal\services\recoveryservices\site_recovery_vmware_replicated_vm_resource_test.go
{
  "file_path": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
  "functions": [
    {
      "File": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 58,
      "FunctionName": "newSiteRecoveryVMWareReplicatedVMResource",
      "ReceiverType": "",
      "ReceiverVar": "",
      "IsTestFunc": false,
      "IsExported": false
    },
    {
      "File": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 89,
      "FunctionName": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "ReceiverType": "",
      "ReceiverVar": "",
      "IsTestFunc": true,
      "IsExported": true
    },
    {
      "File": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 116,
      "FunctionName": "basic",
      "ReceiverType": "SiteRecoveryVMWareReplicatedVmResource",
      "ReceiverVar": "r",
      "IsTestFunc": false,
      "IsExported": false
    }
  ],
  "calls": [
    {
      "CallerFunction": "",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 33,
      "ReceiverExpr": "t",
      "MethodName": "Skipf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "t.Skipf",
      "NumArgs": 1,
      "Arguments": "\"subscription id is empty\""
    },
    {
      "CallerFunction": "",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 36,
      "ReceiverExpr": "t",
      "MethodName": "Skipf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "t.Skipf",
      "NumArgs": 1,
      "Arguments": "\"vault name is empty\""
    },
    {
      "CallerFunction": "",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 39,
      "ReceiverExpr": "t",
      "MethodName": "Skipf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "t.Skipf",
      "NumArgs": 1,
      "Arguments": "\"vault resource group name is empty\""
    },
    {
      "CallerFunction": "",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 42,
      "ReceiverExpr": "t",
      "MethodName": "Skipf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "t.Skipf",
      "NumArgs": 1,
      "Arguments": "\"`ARM_TEST_VMWARE_SOURCE_VM_NAME` must be set for acceptance tests!\""
    },
    {
      "CallerFunction": "",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 45,
      "ReceiverExpr": "t",
      "MethodName": "Skipf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "t.Skipf",
      "NumArgs": 1,
      "Arguments": "\"`ARM_TEST_VMWARE_APPLIANCE_NAME` must be set for acceptance tests!\""
    },
    {
      "CallerFunction": "",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 48,
      "ReceiverExpr": "t",
      "MethodName": "Skipf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "t.Skipf",
      "NumArgs": 1,
      "Arguments": "\"`ARM_TEST_VMWARE_VAULT_LOCATION` must be set for acceptance tests!\""
    },
    {
      "CallerFunction": "",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 51,
      "ReceiverExpr": "t",
      "MethodName": "Skipf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "t.Skipf",
      "NumArgs": 1,
      "Arguments": "\"`ARM_TEST_VMWARE_CREDENTIAL_NAME` must be set for acceptance tests!\""
    },
    {
      "CallerFunction": "",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 54,
      "ReceiverExpr": "t",
      "MethodName": "Skipf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "t.Skipf",
      "NumArgs": 1,
      "Arguments": "\"`ARM_TEST_VMWARE_SOURCE_MAC_ADDRESS` must be set for acceptance tests!\""
    },
    {
      "CallerFunction": "newSiteRecoveryVMWareReplicatedVMResource",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 59,
      "ReceiverExpr": "replicationprotecteditems",
      "MethodName": "ParseVaultID",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "replicationprotecteditems.ParseVaultID",
      "NumArgs": 1,
      "Arguments": "vaultId"
    },
    {
      "CallerFunction": "newSiteRecoveryVMWareReplicatedVMResource",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 61,
      "ReceiverExpr": "fmt",
      "MethodName": "Errorf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "fmt.Errorf",
      "NumArgs": 3,
      "Arguments": "\"parsing %q: %+v\", vaultId, err"
    },
    {
      "CallerFunction": "newSiteRecoveryVMWareReplicatedVMResource",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 76,
      "ReceiverExpr": "replicationprotecteditems",
      "MethodName": "ParseReplicationProtectedItemID",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "replicationprotecteditems.ParseReplicationProtectedItemID",
      "NumArgs": 1,
      "Arguments": "state.ID"
    },
    {
      "CallerFunction": "newSiteRecoveryVMWareReplicatedVMResource",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 81,
      "ReceiverExpr": "clients.RecoveryServices.ReplicationProtectedItemsClient",
      "MethodName": "Get",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "clients.RecoveryServices.ReplicationProtectedItemsClient.Get",
      "NumArgs": 2,
      "Arguments": "ctx, ?"
    },
    {
      "CallerFunction": "newSiteRecoveryVMWareReplicatedVMResource",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 83,
      "ReceiverExpr": "fmt",
      "MethodName": "Errorf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "fmt.Errorf",
      "NumArgs": 3,
      "Arguments": "\"reading %s: %+v\", id, err"
    },
    {
      "CallerFunction": "newSiteRecoveryVMWareReplicatedVMResource",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 86,
      "ReceiverExpr": "utils",
      "MethodName": "Bool",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "utils.Bool",
      "NumArgs": 1,
      "Arguments": "resp.Model != nil"
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 90,
      "ReceiverExpr": "acceptance",
      "MethodName": "BuildTestData",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "acceptance.BuildTestData",
      "NumArgs": 3,
      "Arguments": "t, \"azurerm_site_recovery_vmware_replicated_vm\", \"test\""
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 91,
      "ReceiverExpr": "",
      "MethodName": "newSiteRecoveryVMWareReplicatedVMResource",
      "IsMethodCall": false,
      "IsLocalCall": false,
      "FullCall": "newSiteRecoveryVMWareReplicatedVMResource",
      "NumArgs": 6,
      "Arguments": "os.Getenv(...), os.Getenv(...), os.Getenv(...), os.Getenv(...), os.Getenv(...), os.Getenv(...)"
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 92,
      "ReceiverExpr": "os",
      "MethodName": "Getenv",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "os.Getenv",
      "NumArgs": 1,
      "Arguments": "\"ARM_TEST_VMWARE_VAULT_ID\""
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 93,
      "ReceiverExpr": "os",
      "MethodName": "Getenv",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "os.Getenv",
      "NumArgs": 1,
      "Arguments": "\"ARM_TEST_VMWARE_SOURCE_VM_NAME\""
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 94,
      "ReceiverExpr": "os",
      "MethodName": "Getenv",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "os.Getenv",
      "NumArgs": 1,
      "Arguments": "\"ARM_TEST_VMWARE_APPLIANCE_NAME\""
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 95,
      "ReceiverExpr": "os",
      "MethodName": "Getenv",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "os.Getenv",
      "NumArgs": 1,
      "Arguments": "\"ARM_TEST_VMWARE_VAULT_LOCATION\""
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 96,
      "ReceiverExpr": "os",
      "MethodName": "Getenv",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "os.Getenv",
      "NumArgs": 1,
      "Arguments": "\"ARM_TEST_VMWARE_CREDENTIAL_NAME\""
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 97,
      "ReceiverExpr": "os",
      "MethodName": "Getenv",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "os.Getenv",
      "NumArgs": 1,
      "Arguments": "\"ARM_TEST_VMWARE_SOURCE_MAC_ADDRESS\""
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 100,
      "ReceiverExpr": "t",
      "MethodName": "Skipf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "t.Skipf",
      "NumArgs": 2,
      "Arguments": "\"failed to create SiteRecoveryVMWareReplicatedVmResource: %+v\", err"
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 103,
      "ReceiverExpr": "r",
      "MethodName": "preCheck",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "r.preCheck",
      "NumArgs": 1,
      "Arguments": "t"
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 105,
      "ReceiverExpr": "data",
      "MethodName": "ResourceTest",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "data.ResourceTest",
      "NumArgs": 3,
      "Arguments": "t, r, composite{...}"
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 107,
      "ReceiverExpr": "r",
      "MethodName": "basic",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "r.basic",
      "NumArgs": 1,
      "Arguments": "data"
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 108,
      "ReceiverExpr": "acceptance",
      "MethodName": "ComposeTestCheckFunc",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "acceptance.ComposeTestCheckFunc",
      "NumArgs": 1,
      "Arguments": "check.That(...).ExistsInAzure(...)"
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 109,
      "ReceiverExpr": "check.That(...)",
      "MethodName": "ExistsInAzure",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "check.That(...).ExistsInAzure",
      "NumArgs": 1,
      "Arguments": "r"
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 109,
      "ReceiverExpr": "check",
      "MethodName": "That",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "check.That",
      "NumArgs": 1,
      "Arguments": "data.ResourceName"
    },
    {
      "CallerFunction": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 112,
      "ReceiverExpr": "data",
      "MethodName": "ImportStep",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "data.ImportStep",
      "NumArgs": 0,
      "Arguments": ""
    },
    {
      "CallerFunction": "basic",
      "CallerFile": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "Line": 117,
      "ReceiverExpr": "fmt",
      "MethodName": "Sprintf",
      "IsMethodCall": true,
      "IsLocalCall": false,
      "FullCall": "fmt.Sprintf",
      "NumArgs": 11,
      "Arguments": "`\nprovider \"azurerm\" {\n  subscription_id = \"%[1]s\"\n  features {\n  }\n}\n\nresource \"azurerm_resource_group\" \"target\" {\n  name     = \"acctestRG-%[4]d\"\n  location = \"%[6]s\"\n}\n\nresource \"azurerm_storage_account\" \"target\" {\n  name                     = \"acct%[5]s\"\n  resource_group_name      = azurerm_resource_group.target.name\n  location                 = azurerm_resource_group.target.location\n  account_tier             = \"Standard\"\n  account_replication_type = \"LRS\"\n}\n\nresource \"azurerm_virtual_network\" \"target\" {\n  name                = \"acctestvn-%[4]d\"\n  address_space       = [\"10.0.0.0/16\"]\n  location            = azurerm_resource_group.target.location\n  resource_group_name = azurerm_resource_group.target.name\n}\n\nresource \"azurerm_subnet\" \"target\" {\n  name                 = \"internal\"\n  resource_group_name  = azurerm_resource_group.target.name\n  virtual_network_name = azurerm_virtual_network.target.name\n  address_prefixes     = [\"10.0.2.0/24\"]\n}\n\ndata \"azurerm_recovery_services_vault\" \"vault\" {\n  name                = \"%[2]s\"\n  resource_group_name = \"%[3]s\"\n}\n\nresource \"azurerm_site_recovery_vmware_replication_policy\" \"test\" {\n  recovery_vault_id                                    = data.azurerm_recovery_services_vault.vault.id\n  name                                                 = \"acctest-policy-%[4]d\"\n  recovery_point_retention_in_minutes                  = 1440\n  application_consistent_snapshot_frequency_in_minutes = 240\n}\n\nresource \"azurerm_site_recovery_vmware_replication_policy_association\" \"test\" {\n  name              = \"acctest-%[4]d\"\n  recovery_vault_id = data.azurerm_recovery_services_vault.vault.id\n  policy_id         = azurerm_site_recovery_vmware_replication_policy.test.id\n}\n\nresource \"azurerm_site_recovery_vmware_replicated_vm\" \"test\" {\n  name                                       = \"acct%[4]d\"\n  recovery_vault_id                          = data.azurerm_recovery_services_vault.vault.id\n  source_vm_name                             = \"%[7]s\"\n  appliance_name                             = \"%[8]s\"\n  recovery_replication_policy_id             = azurerm_site_recovery_vmware_replication_policy_association.test.policy_id\n  physical_server_credential_name            = \"%[9]s\"\n  license_type                               = \"NotSpecified\"\n  target_boot_diagnostics_storage_account_id = azurerm_storage_account.target.id\n  target_vm_name                             = \"%[7]s\"\n  target_resource_group_id                   = azurerm_resource_group.target.id\n  default_log_storage_account_id             = azurerm_storage_account.target.id\n  default_recovery_disk_type                 = \"Standard_LRS\"\n  target_network_id                          = azurerm_virtual_network.target.id\n\n  network_interface {\n    source_mac_address = \"%[10]s\"\n    target_subnet_name = azurerm_subnet.target.name\n    is_primary         = true\n  }\n\n  lifecycle {\n    ignore_changes = [\n      target_vm_size,\n      default_log_storage_account_id,\n      default_recovery_disk_type,\n      managed_disk,\n      network_interface\n    ]\n  }\n}\n`, r.SubscriptionId, r.VaultName, r.VaultRgName, data.RandomInteger, data.RandomString, r.Location, r.SourceVMName, r.ApplianceName, r.Credential, r.SourceMacAddress"
    }
  ],
  "imports": [
    {
      "PackagePath": "context",
      "PackageName": "context",
      "Alias": ""
    },
    {
      "PackagePath": "fmt",
      "PackageName": "fmt",
      "Alias": ""
    },
    {
      "PackagePath": "os",
      "PackageName": "os",
      "Alias": ""
    },
    {
      "PackagePath": "testing",
      "PackageName": "testing",
      "Alias": ""
    },
    {
      "PackagePath": "github.com/hashicorp/go-azure-sdk/resource-manager/recoveryservicessiterecovery/2024-04-01/replicationprotecteditems",
      "PackageName": "replicationprotecteditems",
      "Alias": ""
    },
    {
      "PackagePath": "github.com/hashicorp/terraform-provider-azurerm/internal/acceptance",
      "PackageName": "acceptance",
      "Alias": ""
    },
    {
      "PackagePath": "github.com/hashicorp/terraform-provider-azurerm/internal/acceptance/check",
      "PackageName": "check",
      "Alias": ""
    },
    {
      "PackagePath": "github.com/hashicorp/terraform-provider-azurerm/internal/clients",
      "PackageName": "clients",
      "Alias": ""
    },
    {
      "PackagePath": "github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk",
      "PackageName": "pluginsdk",
      "Alias": ""
    },
    {
      "PackagePath": "github.com/hashicorp/terraform-provider-azurerm/utils",
      "PackageName": "utils",
      "Alias": ""
    }
  ],
  "test_steps": [
    {
      "source_file": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
      "source_line": 106,
      "source_function": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
      "source_struct": "",
      "step_index": 1,
      "step_body": "{\r\n\t\t\tConfig: r.basic(data),\r\n\t\t\tCheck: acceptance.ComposeTestCheckFunc(\r\n\t\t\t\tcheck.That(data.ResourceName).ExistsInAzure(r),\r\n\t\t\t),\r\n\t\t}",
      "config_expr": "r.basic(data)",
      "config_variable": "r",
      "config_method": "basic",
      "config_struct": "SiteRecoveryVMWareReplicatedVmResource",
      "is_local_call": true,
      "target_file": "",
      "target_line": 0
    }
  ],
  "template_calls": null,
  "patterns": {
    "SequentialTests": [],
    "MapBasedTests": [],
    "AnonymousFunctions": [],
    "VisibilityInfo": [
      {
        "FunctionName": "preCheck",
        "ReceiverType": "SiteRecoveryVMWareReplicatedVmResource",
        "Line": 902,
        "FilePath": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
        "IsPublic": false,
        "VisibilityType": "PRIVATE_REFERENCE",
        "ReferenceTypeId": 11
      },
      {
        "FunctionName": "newSiteRecoveryVMWareReplicatedVMResource",
        "ReceiverType": "",
        "Line": 1766,
        "FilePath": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
        "IsPublic": false,
        "VisibilityType": "PRIVATE_REFERENCE",
        "ReferenceTypeId": 11
      },
      {
        "FunctionName": "Exists",
        "ReceiverType": "SiteRecoveryVMWareReplicatedVmResource",
        "Line": 2527,
        "FilePath": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
        "IsPublic": true,
        "VisibilityType": "PUBLIC_REFERENCE",
        "ReferenceTypeId": 12
      },
      {
        "FunctionName": "TestAccSiteVMWareRecoveryReplicatedVM_basic",
        "ReceiverType": "",
        "Line": 3015,
        "FilePath": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
        "IsPublic": true,
        "VisibilityType": "PUBLIC_REFERENCE",
        "ReferenceTypeId": 12
      },
      {
        "FunctionName": "basic",
        "ReceiverType": "SiteRecoveryVMWareReplicatedVmResource",
        "Line": 3864,
        "FilePath": "internal/services/recoveryservices/site_recovery_vmware_replicated_vm_resource_test.go",
        "IsPublic": false,
        "VisibilityType": "PRIVATE_REFERENCE",
        "ReferenceTypeId": 11
      }
    ]
  }
}
